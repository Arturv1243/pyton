# Игра-лабиринт

# 1. Создайте функцию print_maze(maze), которая будет
# выводить текущее состояние лабиринта на экран.
#
# 2. Разработайте функцию find_exit(maze, x, y), где maze -
# лабиринт, x и y - текущие координаты игрока в лабиринте.
#
# 3. Функция должна проверять, можно ли сделать шаг (не
# упереться в стену). Обновлять позицию игрока и помечать
# текущую клетку как посещенную ('-'). Проверять, достиг ли
# игрок выхода ('0'), и если да, то выводить сообщение о
# победе и завершать игру. В конце сделайте вывод за сколько
# шагов удалось найти выход
#
# 4. Ходы должны запрашиваться у пользователя
#
# Пример лабиринта:
#
# maze = [
#
#     ["#", "#", "#", "#", "#", "#", "#"],
#
#     ["#", " ", " ", " ", " ", " ", "#"],
#
#     ["#", " ", "#", "#", "#", " ", "#"],
#
#     ["#", " ", "#", "E", " ", " ", "#"],
#
#     ["#", " ", "#", "#", "#", " ", "#"],
#
#     ["#", " ", " ", " ", "#", " ", "#"],
#
#     ["#", "#", "0", "#", "#", "#", "#"]
#
# ]
#
#
# где Е это игрок, 0 это выход.
#
# Управление игроком можно осуществлять клавишами AWSD  
#
# def print_maze(maze):
#
#     for row in maze:
#
#         print(' '.join(row))
maze = [
    ["#", "#", "#", "#", "#", "#", "#"],
    ["#", " ", " ", " ", " ", " ", "#"],
    ["#", " ", "#", "#", "#", " ", "#"],
    ["#", " ", "#", "E", " ", " ", "#"],
    ["#", " ", "#", "#", "#", " ", "#"],
    ["#", " ", " ", " ", "#", " ", "#"],
    ["#", "#", "0", "#", "#", "#", "#"]
]


# Выводим лабиринт построчно
def print_maze(maze):
    for row in maze:
        print(' '.join(row))
    print()  # пустая строка для красоты


# Ищем игрока E
def find_player(maze):
    for i in range(len(maze)):
        for j in range(len(maze[i])):
            if maze[i][j] == "E":
                return i, j
    return None, None


def find_exit(maze):
    steps = 0
    x, y = find_player(maze)

    while True:
        print_maze(maze)
        move = input("Введите ход (W/A/S/D): ").strip().upper()

        if move not in ["W", "A", "S", "D"]:
            print("Используйте только W A S D")
            continue

        # координаты нового хода
        new_x, new_y = x, y
        if move == "W":
            new_x -= 1
        elif move == "S":
            new_x += 1
        elif move == "A":
            new_y -= 1
        elif move == "D":
            new_y += 1

        # проверяем клетку
        if maze[new_x][new_y] == "#":
            print("Стена. Ход невозможен.")
            continue
        elif maze[new_x][new_y] == "0":
            steps += 1
            print("Выход найден!")
            print(f"Шагов сделано: {steps}")
            break
        else:
            maze[x][y] = "-"  # старое место
            maze[new_x][new_y] = "E"  # новое место
            x, y = new_x, new_y
            steps += 1


# Запуск игры
find_exit(maze)